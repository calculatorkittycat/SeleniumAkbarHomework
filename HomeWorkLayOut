# Homework 1 : Setting up Foundation
1. Review the day09 class and class note.
2. Update `TestBase` class to use `Driver.getDriver()` instead of `WebDriverFactory`
3. Create new `WebOrderUtility` with different name or modify existing one.
    1. remove `WebDriver driverParam`
    2. re-create the methods to use `Driver.getDriver()`

4. Update `isAtOrderPage()` for performance
    1. observe : the code works great when header element found ,but forced to wait for 10 seconds of implicit wait when element not found
    2. use Explicit wait technic we learned to minimize the wait time to 2 seconds max by waiting accoridng to expected condition of header element is visible : `visibilityOfElementLocated` condition


5. Create a method called openWebOrderApp()
    - no param , no return type
    - simply navigate to WebOrder login page
    - use `Driver` class we created , no param!

    *************************

## Homework 2 : method practice
6. Create a method `verifyUserName`
   1. accept `String username` as parameter
   2. The method check the welcome message right beside `logout` link contains username or not. for example `Welcome , Tester` contains `Tester`
   3. return `true` if it match username passed, false if not.

7. Create a method `selectSideBarTab`
   1. accept `String tabName` no return type.
   2. click on the tab according to the tabName provided, for example : if "View all products" passed to the method , it should click on second tab.

8. Create a method `checkAll`
   1. accept no param , return `boolean`
   2. click on `Check All` button
   3. return `true` if all checkboxes are checked , false if any left unchecked

9. Create a method `uncheckAll`
   1. accept no param , return `boolean`
   2. click on `Uncheck All` button
   3. return `true` if all checkboxes are unchecked , false if any left checked

10. Create a method `getAllProducts`
    1.  accept no param ,
    2.  return `List<String>`
    3.  click on `View All Products` tab
    4.  save each cell value in first column `Product name` in the table into `List<String>`

    *************************

## Homework 3 : method practice
11. Create a method `getUnitPriceFromForm`
    1.  accept `String productName`
    2.  return `int` for unit price
    3.  It should
        1.  select product from product dropdown list
        2.  click `calculate` button
        3.  get the value attribute of `Price per unit:` input box
        4.  return it from the method.

12. Create a method `getDiscountFromForm`
    1.  accept `String productName` , `int quantity`
    2.  return `int` for discount
    3.  It should
        1.  select `productName` from product dropdown list
        2.  Enter `quantity` into `Quantity:*` inputbox (Fact : discount apply only if quantity is 10+)
        3. click `calculate` button
        4. get text attribute of `discount` inputbox and return from the method.

 13. Create a method `calculateTotal`
    1.  accept `String productName` , `int quantity`
    2. return `int` for total
    3. It should
       1.  select `productName` from product dropdown list
       2.  Enter `quantity` into `Quantity:*` inputbox
       3.  Click `calculate` button
       4.  get text attribute of `Total` inputbox and return from the method.

13. Create a method `getExpectedDiscount`
    1.  accept `String productName` , `int quantity`
    2.  return `discount` amount according to `productName`,`quantity`
    3.  It should
        - if `quantity` is less than 10
          - return `0`
        - else according to all products table
          - return `correct discount number` : 8 , 15, 10
        - This is all java no selenium code.

14. Create a void method `enterAddressInfo`
    1.  accept no param (optionally you can parameterize it but we will use `javafaker` library to randomize it later)
    2.  It should fill up the `Address Information` section of order form

15.  Create a void method `enterPaymentInfo`
    1.  accept no param (optionally you can parameterize it but we will use `javafaker` library to randomize it later)
    2.  It should fill up the `Payment Information` section of order form

16. Create a void method `submitAndVerify`
    1. accept no param return boolean
    2. click on `process` button
    3. check if `New order has been successfully added.` message present
    4. return `true` if it is , false if it is not.
    5. Use explicit wait to avoid long wait time if not present.

    *************************

## Homework 4 : Tests, Use above methods you created!

Create a Test class `WebOrderLoginTests` and create below test methods
1. `testLoginWithCorrectCredentials`
   1. go to login page
   2. login with correct credentials
   3. `verify` you are at `all order page`
   4. `verify` Welcome message beside `logout` link contains the login `username`

2. `testLoginWithInvalidCredentials`
   1. go to login page
   2. login with invalid credentials
   3. `verify` you are still at login page
   4. `verify` the error message `Invalid Login or Password.` displayed on the screen

Create a Test class `WebOrderFunctionalityTests` and create below test methods
1. `testCheckAllButton`
   1. login with correct credentials
   2. use the method you created earlier to check all checkbox
   3. assert it actual checked all the checkbox (you did this logic in method above so assertTrue this method call)

2. `testUncheckAllButton`
   1. use the method you created earlier to uncheck all checkbox
   2. assert it actual unchecked all the checkbox (you did this logic in method above so assertTrue this method call)

3. `testAllProductName`
   1. login with correct credentials
   2. go to view all product page
   3. `verify` List of all product header `present`
   4. get all product name from first column
   5. `verify` they are : `MyMoney`, `FamilyAlbum` , `ScreenSaver`

4. `testProductInformation_Price`
   1. login with correct credentials
   2. go to `Order` page
   3. Select `MyMoney` from the dropdown
   4. `Verify` the `Price per unit:` inputbox value has changed to `100`
   5. Select `FamilyAlbum` from the dropdown
   6. `Verify` the `Price per unit:` inputbox value has changed to `20`
   7. Select `ScreenSaver` from the dropdown
   8.  `Verify` the `Price per unit:` inputbox value has changed to `80`
   9.  use the method you created `getPriceFromForm`

5. `testProductInformation_Discount`
   1. login with correct credentials
   2. go to `Order` page
   3. Select `MyMoney` from the dropdown
   4. Enter `10` in `quantity` inputbox
   5. Click `calculate`
   6. `Verify` the `Discount` inputbox value has changed to expected discount
   7. Select `FamilyAlbum` from the dropdown
   8. `Verify` the `Discount` inputbox value has changed to expected discount
   9. Select `ScreenSaver` from the dropdown
   10. `Verify` the `Discount` inputbox value has changed to expected discount

6. `testProductInformation_CalculationLessThan10`
   1. login with correct credentials
   2. go to `Order` page
   3. Select `MyMoney` from the dropdown
   4. Enter `9` in `quantity` inputbox
   5. Click `calculate`
   6. Get the actual result from `Total` inputbox
   7. `Verify` the `Total` match the expected result `9*100`
   8. Select `FamilyAlbum` from the dropdown
   9. `Verify` the `Total` match the expected result `9*80`
   10. Select `ScreenSaver` from the dropdown
   11. `Verify` the `Total` match the expected result `9*20`

7. `testProductInformation_Calculation10orGreater`
   1. login with correct credentials
   2. go to `Order` page
   3. Select `MyMoney` from the dropdown
   4. Enter `10` in `quantity` inputbox
   5. Click `calculate`
   6. Get the actual result from `Total` inputbox
   7. `Verify` the `Total` match the expected result `(1-0.08) * 10*100`
   8. Select `FamilyAlbum` from the dropdown
   9. `Verify` the `Total` match the expected result `(1-0.15) * 10*80`
   10. Select `ScreenSaver` from the dropdown
   11. `Verify` the `Total` match the expected result `(1-0.1) * 10*20`

8. `testOrderFlow`
   1. login with correct credentials
   2. go to `Order` page
   3. Select `MyMoney` from the dropdown
   4. Enter `10` in `quantity` inputbox
   5. Click `calculate`
   6. Enter all address information
   7. Enter all payment information
   8. Click process to submit
   9. `verify` sucess message has displayed